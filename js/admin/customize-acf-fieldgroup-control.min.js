!function(i,a,c){var o,n,r=[];i.AcfFieldGroupControl=i.Control.extend({preview_context:{type:null,id:null},initialize:function(t,e){var n;n=e||{},i.Control.prototype.initialize.call(this,t,n)},set_preview_context:function(t){return this.preview_context=t,this},ready:function(){var n=this;this.setting();0<=["post","term","user"].indexOf(n.params.storage_type)&&i.bind("acf-customize-context-changed",function(t){t.type===n.params.storage_type?n.set_preview_context(t).load_form():n.unload_form()}),this.$wrapper=n.container.find(".acf-fields").first(),acf.do_action("append",n.container),n.load_form(),n.container.on("change",".acf-field",function(t){var e=n.container.find(".acf-field :input[name]");acf.validation.errors=[],e.each(function(){this.checkValidity()}),acf.validation.busy=!1,a((o=n).container).data("acf",null),acf.validation.fetch({form:n.container,lock:!1,success:function(t){},complete:function(t){acf.unlockForm(t)}})}),i.Control.prototype.ready.apply(n,arguments)},load_form:function(){var t,e,n,i,o=this;t=wp.ajax.send("load_customizer_field_groups_"+o.id,{data:{wp_customize:"on",section_id:o.id,acf_customize_context:JSON.stringify(o.preview_context),_nonce:c.load_field_group_nonce}}),e=t,n=function(t){o.$wrapper.html(t.html),o.init_fields()},i={idx:r.length,request:e,done:n,finished:!1,scope:null,arguments:null},r.push(i),e.done(function(){var t;for(i.finished=!0,i.self=this,i.arguments=arguments;r.length&&r[0].finished;)(t=r.shift()).done.apply(t.self,t.arguments)}),t.fail(function(t){console.log(" - load field group failure")}),t.always(function(){t=null})},unload_form:function(){this.$wrapper.html("")},init_fields:function(){var t=this;t.$fields=t.container.find(".acf-fields > .acf-field"),setTimeout(function(){acf.doAction("ready",t.$wrapper),acf.doAction("prepare")},1)},updateValues:function(){var t,e=this.container.find(".acf-field :input");e.each(function(){var t=a(this).attr("name");t&&(a(this).data("prev-name",t),a(this).attr("name",t.replace(/\[([0-9]+)\]/g,"[_$1]")))}),t=e.serializeJSON({useIntKeysAsArrayIndex:!1}),e.each(function(){a(this).attr("name",a(this).data("prev-name")),a(this).data("prev-name",null)}),this.setting.set(function n(i){return a.isPlainObject(i)&&(Object.keys(i).join("").match(/^([0-9_]+)$/)&&(i=Object.values(i)),a.each(i,function(t,e){i[t]=n(e)})),i}(t[this.id]))},focusField:function(t){for(var e,n,i=this.$wrapper,o=[];t.length;)if(e=t.pop(),n=_.isNumber(e)?'[data-id="'+e.toString()+'"]':'[data-key="'+e+'"]',(i=i.find(n)).is("[data-id]")&&o.push(i),!i.length)return!1;return this.focus(),setTimeout(function(){o.length&&o.forEach(function(t){var e=acf.getField(t.closest(".acf-field"));t.siblings().not(t).each(function(){"repeater"===e.type?e.collapse(a(this)):"flexible_content"===e.type&&e.closeLayout(a(this))}),"repeater"===e.type?e.expand(t):"flexible_content"===e.type&&e.openLayout(t)}),_.isNumber(e)?i.attr("tabindex",1).focus():i.find("input").focus()},500),!0}}),acf.add_action("validation_success",function(t){o.updateValues()}),acf.add_action("validation_failure",function(t){o.container.find("> .acf-error-message").remove()}),acf.add_action("invalid",function(t){acf.validation.busy=!0}),i.bind("ready",function(){i.previewer.bind("acf-customize-context",function(t){var e;e=n,JSON.stringify(t)!=JSON.stringify(e)&&i.trigger("acf-customize-context-changed",t),n=t}),i.previewer.bind("focus-control-for-setting",function(t){}),i.previewer.bind("acf-focus",function(e){console.log(e);var n=e.pop();i.control.each(function(t){if(t.constructor===i.AcfFieldGroupControl)if(_.isNumber(n)){if(t.preview_context&&t.preview_context.id===n&&t.focusField(e))return}else if(t.id===n&&t.focusField(e))return})})}),i.bind("save-request-params",function(t){_.extend(t,{acf_customize_context:JSON.stringify(n)})}),i.controlConstructor.acf_customizer=i.AcfFieldGroupControl,i.bind("changeset-error",function(){})}(wp.customize,jQuery,acf_fieldgroup_control);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
