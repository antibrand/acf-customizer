!function(e,i,o){var a,c,r=[];e.AcfFieldGroupControl=e.Control.extend({preview_context:{type:null,id:null},initialize:function(t,n){var i;i=n||{},e.Control.prototype.initialize.call(this,t,i)},set_preview_context:function(t){return this.preview_context=t,this},ready:function(){var i=this;this.setting();0<=["post","term","user"].indexOf(i.params.storage_type)&&e.bind("acf-customize-context-changed",function(t){t.type===i.params.storage_type?i.set_preview_context(t).load_form():i.unload_form()}),this.$wrapper=i.container.find(".acf-fields").first(),acf.do_action("append",i.container),i.load_form(),i.container.on("change",".acf-field",function(t){var n=i.container.find(".acf-field :input");acf.validation.errors=[],n.each(function(){this.checkValidity()}),acf.validation.busy=!1,a=i,acf.validation.fetch({form:i.container,lock:!1,success:function(t){}})}),e.Control.prototype.ready.apply(i,arguments)},load_form:function(){var t,n,i,e,a=this;t=wp.ajax.send("load_customizer_field_groups_"+a.id,{data:{wp_customize:"on",section_id:a.id,acf_customize_context:JSON.stringify(a.preview_context),_nonce:o.load_field_group_nonce}}),n=t,i=function(t){a.$wrapper.html(t.html),a.init_fields()},e={idx:r.length,request:n,done:i,finished:!1,scope:null,arguments:null},r.push(e),n.done(function(){var t;for(e.finished=!0,e.self=this,e.arguments=arguments;r.length&&r[0].finished;)(t=r.shift()).done.apply(t.self,t.arguments)}),t.fail(function(t){console.log(" - load field group failure")}),t.always(function(){t=null})},unload_form:function(){this.$wrapper.html("")},init_fields:function(){var t=this;t.$fields=t.container.find(".acf-fields > .acf-field"),setTimeout(function(){acf.doAction("ready",t.$wrapper)},1)},updateValues:function(){var t,n=this.container.find(".acf-field :input");n.each(function(){var t=i(this).attr("name");t&&(i(this).data("prev-name",t),i(this).attr("name",t.replace(/\[([0-9]+)\]/g,"[_$1]")))}),t=n.serializeJSON({useIntKeysAsArrayIndex:!1}),n.each(function(){i(this).attr("name",i(this).data("prev-name"))}),this.setting.set(t[this.id])}}),acf.add_action("validation_success",function(t){a.updateValues()}),acf.add_action("validation_failure",function(t){a.container.find("> .acf-error-message").remove()}),acf.add_action("invalid",function(t){acf.validation.busy=!0}),e.bind("ready",function(){e.previewer.bind("acf-customize-context",function(t){var n;n=c,JSON.stringify(t)!=JSON.stringify(n)&&e.trigger("acf-customize-context-changed",t),c=t})}),e.bind("save-request-params",function(t){_.extend(t,{acf_customize_context:JSON.stringify(c)})}),e.controlConstructor.acf_customizer=e.AcfFieldGroupControl,e.bind("changeset-error",function(){})}(wp.customize,jQuery,acf_fieldgroup_control);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
