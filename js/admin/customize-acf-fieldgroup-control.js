!function a(r,c,f){function s(t,e){if(!c[t]){if(!r[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(u)return u(t,!0);var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}var o=c[t]={exports:{}};r[t][0].call(o.exports,function(e){return s(r[t][1][e]||e)},o,o.exports,a,r,c,f)}return c[t].exports}for(var u="function"==typeof require&&require,e=0;e<f.length;e++)s(f[e]);return s}({1:[function(e,t,n){"use strict";var i,o,a,r,c,f;i=wp.customize,o=jQuery,a=acf_fieldgroup_control,f=[],i.AcfFieldGroupControl=i.Control.extend({preview_context:{type:null,id:null},initialize:function(e,t){var n;n=t||{},i.Control.prototype.initialize.call(this,e,n)},set_preview_context:function(e){return this.preview_context=e,this},ready:function(){var n=this;this.setting(),0<=["post","term","user"].indexOf(n.params.storage_type)&&i.bind("acf-customize-context-changed",function(e){e.type===n.params.storage_type?n.set_preview_context(e).load_form():n.unload_form()}),this.$wrapper=n.container.find(".acf-fields").first(),acf.do_action("append",n.container),n.load_form(),n.container.on("change",".acf-field",function(e){var t=n.container.find(".acf-field :input[name]");acf.validation.errors=[],t.each(function(){this.checkValidity()}),acf.validation.busy=!1,o((r=n).container).data("acf",null),acf.validation.fetch({form:n.container,lock:!1,success:function(e){},complete:function(e){acf.unlockForm(e)}})}),i.Control.prototype.ready.apply(n,arguments)},load_form:function(){var e,t=this;(function(e,t){var n={idx:f.length,request:e,done:t,finished:!1,scope:null,arguments:null};f.push(n),e.done(function(){var e;for(n.finished=!0,n.self=this,n.arguments=arguments;f.length&&f[0].finished;)(e=f.shift()).done.apply(e.self,e.arguments)})})(e=wp.ajax.send("load_customizer_field_groups_"+t.id,{data:{wp_customize:"on",section_id:t.id,acf_customize_context:JSON.stringify(t.preview_context),_nonce:a.load_field_group_nonce}}),function(e){t.$wrapper.html(e.html),t.init_fields()}),e.fail(function(e){console.log(" - load field group failure")}),e.always(function(){e=null})},unload_form:function(){this.$wrapper.html("")},init_fields:function(){var e=this;e.$fields=e.container.find(".acf-fields > .acf-field"),setTimeout(function(){acf.doAction("ready",e.$wrapper),acf.doAction("prepare")},1)},updateValues:function(){var e,t=this.container.find(".acf-field :input");t.each(function(){var e=o(this).attr("name");e&&(o(this).data("prev-name",e),o(this).attr("name",e.replace(/\[([0-9]+)\]/g,"[_$1]")))}),e=t.serializeJSON({useIntKeysAsArrayIndex:!1}),t.each(function(){o(this).attr("name",o(this).data("prev-name")),o(this).data("prev-name",null)}),this.setting.set(function n(i){return o.isPlainObject(i)&&(Object.keys(i).join("").match(/^([0-9_]+)$/)&&(i=Object.values(i)),o.each(i,function(e,t){i[e]=n(t)})),i}(e[this.id]))},focusField:function(e){for(var t,n=this.$wrapper,i=[];e.length;)if(t=e.pop(),(n=_.isNumber(t)?n.is('[data-type="flexible_content"]')?n.find("> .acf-input > .acf-flexible-content > .values").children(":not(.acf-clone)").eq(t):!!n.is('[data-type="repeater"]')&&(console.log(n.find("> .acf-input > .acf-repeater > .acf-table > tbody")),n.find("> .acf-input > .acf-repeater > .acf-table > tbody").children(":not(.acf-clone)").eq(t)):n.find('[data-key="'+t+'"]'))&&n.is("[data-id]")&&i.push(n),!n.length)return!1;return this.focus(),setTimeout(function(){i.length&&function(e){e.forEach(function(e){var t=acf.getField(e.closest(".acf-field"));e.siblings().not(e).each(function(){"repeater"===t.type?t.collapse(o(this)):"flexible_content"===t.type&&t.closeLayout(o(this))}),"repeater"===t.type?t.expand(e):"flexible_content"===t.type&&t.openLayout(e)})}(i),_.isNumber(t)?n.attr("tabindex",1).focus():n.find("input").focus()},500),!0}}),acf.add_action("validation_success",function(e){r.updateValues()}),acf.add_action("validation_failure",function(e){r.container.find("> .acf-error-message").remove()}),acf.add_action("invalid",function(e){acf.validation.busy=!0}),i.bind("ready",function(){i.previewer.bind("acf-customize-context",function(e){var t;t=c,JSON.stringify(e)!=JSON.stringify(t)&&i.trigger("acf-customize-context-changed",e),c=e}),i.previewer.bind("focus-control-for-setting",function(e){}),i.previewer.bind("acf-focus",function(t){console.log(t);var n=t.pop();i.control.each(function(e){if(e.constructor===i.AcfFieldGroupControl)if(_.isNumber(n)){if(e.preview_context&&e.preview_context.id===n&&e.focusField(t))return}else if(e.id===n&&e.focusField(t))return})})}),i.bind("save-request-params",function(e){_.extend(e,{acf_customize_context:JSON.stringify(c)})}),i.controlConstructor.acf_customizer=i.AcfFieldGroupControl,i.bind("changeset-error",function(){})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
